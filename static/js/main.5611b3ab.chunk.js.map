{"version":3,"sources":["components/Todo.js","App.js","reportWebVitals.js","index.js"],"names":["Todo","useState","inputData","setInputData","localStorage","getItem","JSON","parse","items","setItems","toggleSubmit","setToggleSubmit","isEditItem","setIsEditItem","day","Date","getDay","addItem","map","elem","id","name","allInputData","getTime","toString","alert","useEffect","setItem","stringify","className","style","fontSize","fontFamily","src","alt","width","height","type","placeholder","value","onChange","e","target","title","onClick","newEditItem","find","console","log","editItem","index","updateditems","filter","deleteItem","data-sm-link-text","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5611b3ab.chunk.js","sourcesContent":["import React, {useState, useEffect} from 'react'\r\nimport \"../App.css\"\r\n\r\nconst getLocalItmes = () => {\r\n    let list = localStorage.getItem('lists');\r\n\r\n    if (list) {\r\n        return JSON.parse(localStorage.getItem('lists'));\r\n    } else {\r\n        return [];\r\n    }\r\n}\r\n\r\nconst Todo = () => {\r\n\r\n    const [inputData, setInputData] = useState('');\r\n    const [items, setItems] = useState(getLocalItmes());\r\n    const [toggleSubmit, setToggleSubmit] = useState(true);\r\n    const [isEditItem, setIsEditItem] = useState(null);\r\n    var days = ['Sunday','Monday','Tuesday','Wednesday','Thursday','Friday','Saturday'];\r\n    var day = days[ new Date().getDay()];\r\n    const addItem = () => {\r\n        if (!inputData) {\r\n            alert('Hey there!! Please add your Valuable Tasks to the list. 🤗');\r\n        } else if(inputData && !toggleSubmit) {\r\n            setItems(\r\n                items.map((elem) => {\r\n                    if (elem.id === isEditItem) {\r\n                        return { ...elem, name: inputData }\r\n                    }\r\n                    return elem;\r\n                })\r\n            )\r\n                 setToggleSubmit(true);\r\n\r\n                 setInputData('');\r\n\r\n                 setIsEditItem(null);\r\n        } else {\r\n            const allInputData = { id: new Date().getTime().toString(), name:inputData }\r\n            setItems([...items, allInputData]);\r\n            setInputData('')\r\n        }\r\n    }\r\n\r\n    // delete the items\r\n    const deleteItem = (index) => {\r\n        const updateditems = items.filter((elem) => {\r\n            return index !== elem.id;\r\n        });\r\n\r\n        setItems(updateditems);\r\n    }\r\n    \r\n    const editItem = (id) => {\r\n        let newEditItem = items.find((elem) => {\r\n            return elem.id === id\r\n        });\r\n        console.log(newEditItem);\r\n\r\n        setToggleSubmit(false);\r\n\r\n        setInputData(newEditItem.name);\r\n\r\n        setIsEditItem(id);\r\n\r\n    }\r\n\r\n    // remove all \r\n    const removeAll = () => {\r\n         setItems([]);\r\n    }\r\n\r\n    // add data to localStorage\r\n    useEffect(() => {\r\n       localStorage.setItem('lists', JSON.stringify(items))\r\n    }, [items]);\r\n\r\n    return (\r\n        <>\r\n            <div className=\"main-div\">\r\n                <div className=\"child-div\">\r\n                  \r\n                <h1 style={{fontSize:'3.5em',fontFamily:'Satisfy'}} >Heyah , It's {day}.</h1>\r\n                    <figure>\r\n                        <img src='/todoimg.png' alt=\"todologo\" \r\n                        style={{width:'250px', height:'250px'}}/>\r\n                        <h2 style={{fontFamily:'Roboto'}}>Add Tasks to your TODO list here! 🎯</h2>\r\n                    </figure>\r\n                    <div className=\"addItems\">\r\n                        <input type=\"text\" placeholder=\"✍ Add Tasks...\"\r\n                           value={inputData} \r\n                           onChange={(e) => setInputData(e.target.value) }\r\n                        />\r\n                        {\r\n                            toggleSubmit ? <i className=\"fa fa-plus add-btn\" title=\"Add Item\" onClick={addItem}></i> :\r\n                                 <i className=\"fa fa-edit add-btn\" title=\"Update Item\" onClick={addItem}></i>\r\n                        }\r\n                       \r\n                    </div>\r\n\r\n                    <div className=\"showItems\">\r\n                        {\r\n                            items.map((elem) => {\r\n                                return (\r\n                                    <div className=\"eachItem\" key={elem.id}>\r\n                                        <h3>{elem.name}</h3>\r\n                                        <div className=\"todo-btn\">\r\n                                            <i className=\"fa fa-edit add-btn\" title=\"Edit Item\" onClick={() => editItem(elem.id)}></i>\r\n                                            <i className=\"fa fa-trash add-btn\" title=\"Delete Item\"\r\n                                            onClick={() => deleteItem(elem.id)}></i>\r\n                                        </div>\r\n                                  </div>\r\n                                )\r\n                            })\r\n\r\n                        }\r\n                       \r\n                    </div>\r\n                \r\n                    {/* clear all button  */}\r\n                    <div className=\"showItems\">\r\n                        <button className=\"btn effect04\" data-sm-link-text=\"Remove All\" onClick={removeAll}><span> CHECK LIST </span> </button>\r\n                    </div>\r\n                </div>\r\n          </div>  \r\n        </>\r\n    )\r\n}\r\n\r\nexport default Todo","\nimport './App.css';\nimport Todo from './components/Todo';\n\nfunction App() {\n  return (\n    <>\n      <Todo/>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}